[tool.poetry]
authors = ["Your Name <you@example.com>"]
description = ""
name = "osm-relatify"
version = "0.0.0"

[tool.poetry.dependencies]
asyncache = "<1"
authlib = "^1.3.0"
cachetools = "^5.3.2"
cython = "^3.0.8"
dacite = "^1.8.1"
fastapi = "<0.111"
gunicorn = "*"
httpx = {extras = ["brotli", "http2"], version = "<1"}
itsdangerous = "^2.1.2"
jinja2 = "^3.1.3"
msgspec = "<1"
networkx = "^3.2.1"
python = "^3.12"
rapidfuzz = "^3.6.1"
rtree = "^1.1.0"
scikit-learn = "^1.3.2"
scipy = "^1.11.4"
sentry-sdk = {extras = ["fastapi", "httpx", "pure_eval"], version = "^1.40.5"}
setuptools = "^69.0.3"
tenacity = "^8.2.3"
uvicorn = {extras = ["standard"], version = "<1"}
xmltodict = "<1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

indent-width = 4
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = [
  "B008",
  "S101",
]
# see https://docs.astral.sh/ruff/rules/ for rules documentation
select = [
  "A", # flake8-builtins
  "ARG", # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "E4", # pycodestyle
  "E7",
  "E9",
  "F", # pyflakes
  "FA", # flake8-future-annotations
  "FLY", # flynt  # "FURB", # refurb
  "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "LOG", # flake8-logging
  "N", # pep8-naming
  "NPY", # numpy
  "Q", # flake8-quotes
  "PERF", # perflint
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RSE", # flake8-raise
  "RUF", # ruff
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "SLF", # flake8-self
  "SLOT", # flake8-slots
  "T10", # flake8-debugger
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "W6",
  "YTT", # flake8-2020
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
indent-style = "space"
line-ending = "lf"
quote-style = "single"
skip-magic-trailing-comma = false

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "open", "type"]

[tool.ruff.lint.flake8-gettext]
extend-function-names = ["pgettext", "npgettext"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["ET"]

[tool.ruff.lint.pylint]
max-args = 10
